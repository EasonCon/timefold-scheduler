@startuml
class DataStruct.ExecutionMode {
- Operation operation
- ResourceRequirement resourceRequirement
- int priority
- float beat
- float quantityPerBeat
}

enum DataStruct.SupplyType {
+  MO
+  MRP
+  PLAN
+  PO
+  PR
+  SO
}

enum DataStruct.TaskType {
+  PARENT
+  CHILD
}

class DataStruct.ResourceRequirement {
- ResourceNode resourceNode
}

abstract class DataStruct.Labeled {
- String id
}

enum DataStruct.ProductionMethod {
+  SELF
+  OUTSOURCING
}

class DataStruct.Task {
- String materialId
- String materialDescription
- float quantity
- List<Operation> craftPath
- List<MasterDemand> masterDemands
- SupplyType supplyType
- Long earliestStartTime
- Long latestStartTime
- Long materialSetTime
}

class DataStruct.MasterDemand {
- Long requiredDate
- Long deliveryDate
- Long breachDate
- Long promisedDate
- Long prePromisedDate
}

class DataStruct.Operation {
- String name
- int order
- Task parentTask
- long quantity
- List<ExecutionMode> executionModes
- List<Operation> previousOperations
- List<Operation> nextOperations
- ProductionMethod productionMethod
- long resourceOccupiedPostTime
- long NonResourceOccupiedPostTime
- OperationStartRelationShip operationStartRelationShip
- boolean isCriticalPath
- Long batchSize
- boolean isLocked
- Long plannedStartTime
- Long plannedEndTime
- ResourceNode plannedResource
- boolean isFirst
- boolean isLast
}

class DataStruct.TimeSlot {
- String shiftID
- long start
- long end
}

enum DataStruct.OperationStartRelationShip {
+  ES
+  SSEE
}



DataStruct.Labeled <|-- DataStruct.ExecutionMode
DataStruct.Labeled <|-- DataStruct.ResourceRequirement
DataStruct.Labeled <|-- DataStruct.Task
DataStruct.Labeled <|-- DataStruct.MasterDemand
DataStruct.Labeled <|-- DataStruct.Operation
@enduml